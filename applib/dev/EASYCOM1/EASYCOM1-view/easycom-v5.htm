<div class="player-profile-card__header"">
  <p>Easycom Messages</p>
  <a class="rpt-max-link rpt-max-link-plus" href="#listMessages" rel="modal:open" ng-click="tableInit();"></a>
</div>
<div class="modal" id="listMessages">
	<!-- <div class="rpt-max-link rpt-max-link-minus"></div> -->
	<div class="pure-g">
		<div class="pure-u-1-2">
			<h2>Easycom Messages</h2>
		</div>
		<div class="pure-u-1-2" id="rowAdd">
			<a href="#formAddEdit" rel="modal:open" class="pure-button pure-button-primary" type="button" title="Add Message" id="btnAddMessage" ng-click="addNewRow(client.number)"><i class="fa fa-plus" aria-hidden="true"></i> Add Message</a>
		</div>
		<div class="pure-u-1" id="rowListMessages">
			<ul class="pure-menu-list">
				<li ng-repeat="message in table.records" class="pure-menu-item">
					<span ng-bind-html="getHtml(message.Message)" style="color:{{message.TextColor}};background-color:{{message.BackgroundColor}};" class="renderedMessage"></span>
					<div class="pure-g">
						<div class="pure-u-3-5">
							<p><strong>Role:</strong> {{getUserRole(message.Allow)}}</p>
							<p><strong>Notes:</strong> {{message.Notes}}</p>
						</div>
						<div class="pure-u-2-5 btnsEditDelete">
							<a href="#formAddEdit" rel="modal:open" ng-click="editRow($index)" type="button" class="pure-button btnEditRow" title="Edit Message" aria-label="Edit Message"><i class="fa fa-pencil" aria-hidden="true"></i> Edit</a>
							<a href="#" ng-click="deleteRow($index)" type="button" class="pure-button btnDeleteRow" title="Delete" aria-label="Delete"><i class="fa fa-trash" aria-hidden="true"></i> Delete</a>
						</div>
					</div>
				</li>
			</ul>
		</div>		
	</div>		
</div>
<!-- Add/Edit Modal -->
<div class="modal" id="formAddEdit">			
	
	<div class="pure-g">
			<h2>{{modeMessage()}}</h2>

		<div class="pure-u-1 one-box">
			<input type="hidden" name="id" id="" class="" ng-model="managementBaselineEdit.id"/>
			<label for='roleSelect'>Roles</label> <small>Select the user role for this message.</small>
			<select name="roleSelect" id="roleSelect" ng-options="r for r in activeRoles track by r" ng-model="roles.selected" ng-change="buildUsers()">
				<option value="">---Please select---</option>
			</select>
		</div>
		<div class="pure-u-1 one-box">
			<!-- <p>{{roles.selected}}</p> -->
			<!-- <textarea name="allow" id="stringAllow" ng-model="managementBaselineEdit.Allow" ></textarea> -->
			<input type="hidden" name="disallow" id="" class="" ng-model="managementBaselineEdit.Disallow"/>			
			<input type="hidden" name="delivery" id="" class="" ng-model="managementBaselineEdit.Delivery"/>			
			<input type="hidden" name="position" id="" class="" ng-model="managementBaselineEdit.Position"/>
		</div>
		<div class="pure-u-1-2 one-box">
			<label for="backgroundcolor">Message Background Color</label><br/>
			<input id="backgroundcolor" name="backgroundcolor" type="text" value="#333333"/>
		</div>
		<div class="pure-u-1-2 one-box">
			<label for="textcolor">Message Text Color</label><br/>
			<input id="textcolor" name="textcolor" type="text" value="#ffffff" />
		</div>
		<div class="pure-u-1 one-box">
			<label for="message">Message Content</label><br/>
			<textarea name="messageText" class="messageText"></textarea>
		</div>
		<div class="pure-u-1 one-box">
			<label for="notes">Notes</label> <small>Not Visible to End Users</small>
			<input type="text" name="notes" class="notes" ng-model="managementBaselineEdit.Notes" />
			<input type="hidden" name="client" id="" class="" ng-model="managementBaselineEdit.client"/>
		</div>
		<div class="pure-u-1 one-box buttons">
			<a href="#listMessages" rel="modal:open" type="button" class="pure-button button-large" ng-click="cancelEditMessage()">Cancel</a>
			<a href="#listMessages" rel="modal:open" type="button" class="pure-button button-large pure-button-primary" ng-click="saveEditMessage()">Save</a>
		</div>			
	</div>
</div>
<!-- end Add/Edit Modal -->


<script type="text/javascript">
	// init color pickers
	$('#backgroundcolor, #textcolor').spectrum({
		showInput:true,
		preferredFormat: "hex",
	});
	$('#textcolor').spectrum({
		showInput:true,
		preferredFormat: "hex",
		change: function(color) {
 			txtClr = color.toHexString();
            tinymce.activeEditor.getBody().style.color = txtClr;
		}
	});
	$('#backgroundcolor').spectrum({
		showInput:true,
		preferredFormat: "hex",
		change: function(color) {
 			bgClr = color.toHexString();
            tinymce.activeEditor.getBody().style.backgroundColor = bgClr;
		}
	});
	
	// Settings for #listMessages and #formAddEdit modals
	$.modal.defaults = {
	  closeExisting: true, // Close existing modals. Set this to false if you need to stack multiple modal instances.
	  escapeClose: false, // Allows the user to close the modal by pressing `ESC`
	  clickClose: false, // Allows the user to close the modal by clicking the overlay
	  closeText: 'Close', // Text content for the close <a> tag.
	  closeClass: '', // Add additional class(es) to the close <a> tag.
	  showClose: true
	};

	$('#formAddEdit').modal.defaults = {
		showClose: false
	};

	// init TinyMCE WYSIWYG editor
	tinymce.init({
    	selector: '.messageText',
    	branding: false,
    	menubar: false,
    	toolbar: 'styleselect bold italic alignleft bullist numlist code',
  		plugins: 'code',
  		body_id: 'editorPreview'
  	});
	
	// This allows TinyMCE to function in a modal
	$('#formAddEdit').on($.modal.OPEN, function(event, modal) {

        for (var i = tinymce.editors.length - 1 ; i > -1 ; i--)
        {
            tinyMCE.execCommand("mceRemoveEditor", true, tinymce.editors[i].id);
        }

        setTimeout(function () {
            tinymce.init({
            	selector:'.messageText',
                branding: false,
		    	menubar: false,
		    	toolbar: 'styleselect bold italic alignleft bullist numlist code',
		  		plugins: 'code',
		  		body_id: 'editorPreview'
            });

            bgClr = $("#backgroundcolor").spectrum("get");
            bgClr = bgClr.toHexString();
            tinymce.activeEditor.getBody().style.backgroundColor = bgClr;

            txtClr = $("#textcolor").spectrum("get");
            txtClr = txtClr.toHexString();
            tinymce.activeEditor.getBody().style.color = txtClr;
        }, 50);
	});
</script>
